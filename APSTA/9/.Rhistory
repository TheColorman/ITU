setwd("W:/Projects/ITU/APSTA/9")
library(UsingR)
# Load the dataset
brightness <- brightness
# Take a look at the dataset
brightness
# Take a look at the dataset
head(brightness)
*Solution*:
library(UsingR)
# Take a look at the dataset
head(brightness)
sample_mean <- mean(brightness)
plot(density(bootstrap_means))
sample_mean <- mean(brightness)
bootstrap_means <- c()
for (i in 1:1000) {
bootstrap_sample <- sample(brightness, size = length(brightness), replace = TRUE)
bootstrap_means <- c(bootstrap_means, sample_mean - mean(bootstrap_sample))
}
plot(density(bootstrap_means))
sample_mean <- mean(brightness)
bootstrap_means <- c()
for (i in 1:1000) {
bootstrap_sample <- sample(brightness, size = length(brightness), replace = TRUE)
bootstrap_means <- c(bootstrap_means, sample_mean - mean(bootstrap_sample))
}
plot(density(bootstrap_means))
bootstrap_means_difference_distribution <- ecdf(bootstrap_means)
probability_outside <- 1 - (bootstrap_means_difference_distribution(0.1) - bootstrap_means_difference_distribution(-0.1))
probability_outside
bootstrap_means_difference_distribution <- ecdf(bootstrap_means)
probability_outside <- 1 - (bootstrap_means_difference_distribution(0.1) - bootstrap_means_difference_distribution(-0.1))
probability_outside
# start by taking a look at the data
head(arctic.oscillations)
# start by taking a look at the data
plot(ecdf(arctic.oscillations))
# start by taking a look at the data
plot(density(arctic.oscillations))
# start by taking a look at the data
plot(density(arctic.oscillations))
# start by taking a look at the data
plot(density(arctic.oscillations, na.rm = T))
expectation_estimate <- mean(arctic.oscillations)
variance_estimate <- var(arctic.oscillations)
arctic.cleaned <- na.omit(arctic.oscillations)
expectation_estimate <- mean(arctic.cleaned)
variance_estimate <- var(arctic.cleaned)
?pnorm
expectation_estimate <- mean(arctic.cleaned)
variance_estimate <- var(arctic.cleaned)
plot(ecdf(arctic.cleaned))
curve(pnorm(x, mean=variance_estimate, sd=variance_estimate), col='red', add=T)
expectation_estimate <- mean(arctic.cleaned)
variance_estimate <- var(arctic.cleaned)
plot(ecdf(arctic.cleaned))
curve(pnorm(x, mean=variance_estimate, sd=variance_estimate), col='red', add=T)
?rnorm
ks_distance_norm_distribution <- function(bootstrapped_data, mean, sd) {
empirical_distribution <- ecdf(bootstrapped_data)
return(max(abs(empirical_distribution(bootstrapped_data) - pnorm(bootstrapped_data, mean = mean, sd = sd))))
}
ks_estimate <- ks_distance_norm_distribution(arctic.cleaned, expectation_estimate, variance_estimate)
bootstrap_ks <- c()
for (i in 1:1000) {
bootstrap_sample <- rnorm(length(arctic.cleaned), mean = expectation_estimate, sd = variance_estimate)
bootstrap_expectation <- mean(bootstrap_sample)
bootstrap_variance <- var(bootstrap_sample)
bootstrap_ks <- c(bootstrap_ks, ks_distance_norm_distribution(bootstrap_sample, bootstrap_expectation, bootstrap_variance))
}
plot(density(bootstrap_ks), xlim=c(0,0.2))
abline(v=ks_estimate, col='red')
plot(density(bootstrap_ks), xlim=c(0,0.2))
abline(v=ks_estimate, col='red')
library(UsingR)
# Take a look at the dataset
head(brightness)
sample_mean <- mean(brightness)
bootstrap_means <- c()
for (i in 1:1000) {
bootstrap_sample <- sample(brightness, size = length(brightness), replace = TRUE)
bootstrap_means <- c(bootstrap_means, sample_mean - mean(bootstrap_sample))
}
plot(density(bootstrap_means))
bootstrap_means_difference_distribution <- ecdf(bootstrap_means)
probability_outside <- 1 - (bootstrap_means_difference_distribution(0.1) - bootstrap_means_difference_distribution(-0.1))
probability_outside
# start by taking a look at the data
plot(density(arctic.oscillations, na.rm = T))
arctic.cleaned <- na.omit(arctic.oscillations)
expectation_estimate <- mean(arctic.cleaned)
variance_estimate <- var(arctic.cleaned)
plot(ecdf(arctic.cleaned))
curve(pnorm(x, mean=variance_estimate, sd=variance_estimate), col='red', add=T)
ks_distance_norm_distribution <- function(bootstrapped_data, mean, sd) {
empirical_distribution <- ecdf(bootstrapped_data)
return(max(abs(empirical_distribution(bootstrapped_data) - pnorm(bootstrapped_data, mean = mean, sd = sd))))
}
ks_estimate <- ks_distance_norm_distribution(arctic.cleaned, expectation_estimate, variance_estimate)
bootstrap_ks <- c()
for (i in 1:1000) {
bootstrap_sample <- rnorm(length(arctic.cleaned), mean = expectation_estimate, sd = variance_estimate)
bootstrap_expectation <- mean(bootstrap_sample)
bootstrap_variance <- var(bootstrap_sample)
bootstrap_ks <- c(bootstrap_ks, ks_distance_norm_distribution(bootstrap_sample, bootstrap_expectation, bootstrap_variance))
}
plot(density(bootstrap_ks), xlim=c(0,0.2))
abline(v=ks_estimate, col='red')
bootstrap_sample <- rnorm(
length(arctic.cleaned), mean = expectation_estimate, sd = variance_estimate)
load("C:/Users/thore/Documents/Repositories/ITU/APSTA/9/.RData")
knitr::opts_chunk$set(echo = TRUE)
eruptions <- faithful$eruptions
sample_mean <- mean(eruptions)
bootstrap_means <- c()
for (i in 1:1000) {
bootstrap_sample <- sample(eruptions, size = length(eruptions), replace = TRUE)
bootstrap_means <- c(bootstrap_means, sample_mean - mean(bootstrap_sample))
}
plot(density(bootstrap_means))
bootstrap_means_difference_distribution <- ecdf(bootstrap_means)
probability_outside <- 1 - (bootstrap_means_difference_distribution(5/60) - bootstrap_means_difference_distribution(-5/60))
probability_outside
software<- c(0,0,0,2,4,6,8,9,10,10,10,12,15,15,16,21,22,24,26,30,30,31,33,36,44,50,55,58,65,68,
75,77,79,81,88,91,97,100,108,108,
112,113,114,115,120,122,129,134,138,143,
148,160,176,180,193,193,197,227,232,233,
236,242,245,255,261,263,281,290,296,300,
300,325,330,357,365,369,371,379,386,422,
445,446,447,452,457,482,529,529,543,600,
648,670,700,707,724,729,748,790,810,816,
828,843,860,865,868,875,943,948,983,990,
1011,1045,1064,1071,1082,1146,1160,1222,1247,1351,
1435,1461,1755,1783,1800,1864,1897,2323,2930,3110,
3321,4116,5485,5509,6150)
plot(ecdf(software))
lambda_estimate = 1/mean(software)
curve(pexp(x, rate=lambda_estimate), col='red', add=T)
ks_distance_exp_distribution <- function(bootstrapped_data, lambda) {
empirical_distribution <- ecdf(bootstrapped_data)
max(abs(empirical_distribution(bootstrapped_data) - pexp(bootstrapped_data, rate = lambda)))
}
ks_estimate <- ks_distance_exp_distribution(software, lambda_estimate)
bootstrap_ks <- c()
for (i in 1:1000) {
bootstrap_sample <- rexp(length(software), lambda_estimate)
bootstrap_lambda <- 1/mean(bootstrap_sample)
bootstrap_ks <- c(bootstrap_ks, ks_distance_exp_distribution(bootstrap_sample, bootstrap_lambda))
}
plot(density(bootstrap_ks), xlim=c(0,0.2))
abline(v=ks_estimate, col='red')
