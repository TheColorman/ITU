)
))
}
ks_estimate <- ks_distance_norm_distribution(
arctic.cleaned,
expectation_estimate,
sd_estimate
)
bootstrap_ks <- c()
for (i in 1:1000) {
bootstrap_sample <- rnorm(
length(arctic.cleaned),
mean = expectation_estimate,
sd = sd_estimate
)
bootstrap_expectation <- mean(bootstrap_sample)
bootstrap_sd <- var(bootstrap_sample)
bootstrap_ks <- c(
bootstrap_ks,
ks_distance_norm_distribution(
bootstrap_sample,
bootstrap_expectation,
bootstrap_sd
)
)
}
plot(density(bootstrap_ks), xlim=c(0,0.2))
abline(v=ks_estimate, col='red')
plot(density(bootstrap_ks), xlim=c(0,0.6))
plot(density(bootstrap_ks), xlim=c(0,0.06))
abline(v=ks_estimate, col='red')
library(UsingR)
# Take a look at the dataset
head(brightness)
sample_mean <- mean(brightness)
bootstrap_means <- c()
for (i in 1:1000) {
bootstrap_sample <- sample(brightness, size = length(brightness), replace = TRUE)
bootstrap_means <- c(bootstrap_means, sample_mean - mean(bootstrap_sample))
}
plot(density(bootstrap_means))
bootstrap_means_difference_distribution <- ecdf(bootstrap_means)
probability_outside <- 1 - (bootstrap_means_difference_distribution(0.1) - bootstrap_means_difference_distribution(-0.1))
probability_outside
# start by taking a look at the data
plot(density(arctic.oscillations, na.rm = T))
arctic.cleaned <- na.omit(arctic.oscillations)
expectation_estimate <- mean(arctic.cleaned)
sd_estimate <- sd(arctic.cleaned)
plot(ecdf(arctic.cleaned))
curve(pnorm(x, mean=expectation_estimate, sd=sd_estimate), col='red', add=T)
ks_distance_norm_distribution <- function(bootstrapped_data, mean, sd) {
empirical_distribution <- ecdf(bootstrapped_data)
return(max(
abs(
empirical_distribution(bootstrapped_data)
- pnorm(bootstrapped_data, mean = mean, sd = sd)
)
))
}
ks_estimate <- ks_distance_norm_distribution(
arctic.cleaned,
expectation_estimate,
sd_estimate
)
bootstrap_ks <- c()
for (i in 1:1000) {
bootstrap_sample <- rnorm(
length(arctic.cleaned),
mean = expectation_estimate,
sd = sd_estimate
)
bootstrap_expectation <- mean(bootstrap_sample)
bootstrap_sd <- var(bootstrap_sample)
bootstrap_ks <- c(
bootstrap_ks,
ks_distance_norm_distribution(
bootstrap_sample,
bootstrap_expectation,
bootstrap_sd
)
)
}
plot(density(bootstrap_ks), xlim=c(0,0.06))
abline(v=ks_estimate, col='red')
ks_distance_norm_distribution <- function(bootstrapped_data, mean, sd) {
empirical_distribution <- ecdf(bootstrapped_data)
return(max(
abs(
empirical_distribution(bootstrapped_data)
- pnorm(bootstrapped_data, mean = mean, sd = sd)
)
))
}
ks_estimate <- ks_distance_norm_distribution(
arctic.cleaned,
expectation_estimate,
sd_estimate
)
bootstrap_ks <- c()
for (i in 1:1000) {
bootstrap_sample <- rnorm(
length(arctic.cleaned),
mean = expectation_estimate,
sd = sd_estimate
)
bootstrap_expectation <- mean(bootstrap_sample)
bootstrap_sd <- var(bootstrap_sample)
bootstrap_ks <- c(
bootstrap_ks,
ks_distance_norm_distribution(
bootstrap_sample,
bootstrap_expectation,
bootstrap_sd
)
)
}
plot(density(bootstrap_ks), xlim=c(0,0.06))
abline(v=ks_estimate, col='red')
ks_distance_norm_distribution <- function(bootstrapped_data, mean, sd) {
empirical_distribution <- ecdf(bootstrapped_data)
return(max(
abs(
empirical_distribution(bootstrapped_data)
- pnorm(bootstrapped_data, mean = mean, sd = sd)
)
))
}
ks_estimate <- ks_distance_norm_distribution(
arctic.cleaned,
expectation_estimate,
sd_estimate
)
bootstrap_ks <- c()
for (i in 1:1000) {
bootstrap_sample <- rnorm(
length(arctic.cleaned),
mean = expectation_estimate,
sd = sd_estimate
)
bootstrap_expectation <- mean(bootstrap_sample)
bootstrap_sd <- var(bootstrap_sample)
bootstrap_ks <- c(
bootstrap_ks,
ks_distance_norm_distribution(
bootstrap_sample,
bootstrap_expectation,
bootstrap_sd
)
)
}
densityplot((bootstrap_ks), xlim=c(0,0.06))
abline(v=ks_estimate, col='red')
ks_distance_norm_distribution <- function(bootstrapped_data, mean, sd) {
empirical_distribution <- ecdf(bootstrapped_data)
return(max(
abs(
empirical_distribution(bootstrapped_data)
- pnorm(bootstrapped_data, mean = mean, sd = sd)
)
))
}
ks_estimate <- ks_distance_norm_distribution(
arctic.cleaned,
expectation_estimate,
sd_estimate
)
bootstrap_ks <- c()
for (i in 1:1000) {
bootstrap_sample <- rnorm(
length(arctic.cleaned),
mean = expectation_estimate,
sd = sd_estimate
)
bootstrap_expectation <- mean(bootstrap_sample)
bootstrap_sd <- var(bootstrap_sample)
bootstrap_ks <- c(
bootstrap_ks,
ks_distance_norm_distribution(
bootstrap_sample,
bootstrap_expectation,
bootstrap_sd
)
)
}
plot(density(bootstrap_ks), xlim=c(0,0.06))
abline(v=ks_estimate, col='red')
rgeom?
?
?asda
?rgeom
estimate_p(c(1, 2, 3, 4))
n <- 200
estimate_p <- function(X) {
return(len(X)/(len(X)+sum(X)))
}
estimate_p(c(1, 2, 3, 4))
n <- 200
estimate_p <- function(X) {
return(X.length/(X.length+sum(X)))
}
estimate_p(c(1, 2, 3, 4))
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
estimate_p(c(1, 2, 3, 4))
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
estimate_p(c(1))
estimate_p(c(1, 0))
estimate_p(c(10))
estimate_p(c(9))
estimate_p(c(9, 9, 9, 9))
estimate_p(c(9, 8, 10, 9))
estimate_p(c(9, 8, 10))
estimate_p(c(9, 8))
X <- rgeom(n, o)
X <- rgeom(n, p)
X <- rgeom(n, p)
p <- 0.3
X <- rgeom(n, p)
estimate_p(X)
p_est_1 <- 1/mean(X)
p_est_2 <- estimate_p(X)
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
density(diffs)
density(diffs_star)
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs))
plot(density(diffs_star))
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs))
limes(density(diffs_star))
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs))
lines(density(diffs_star))
?plot
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star))
lines(density(diffs), )
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star), xlim=c(-0.06, 1))
lines(density(diffs))
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star), xlim=c(-0.06, 0.3))
lines(density(diffs))
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star), xlim=c(-0.06, 0.3), col="magenta")
lines(density(diffs), col="blue")
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star), xlim=c(-0.06, 0.3), col="magenta", sub="Magenta: True estimate\nBlue: Bad estimate")
lines(density(diffs), col="blue")
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star), xlim=c(-0.06, 0.3), col="magenta", sub="\nMagenta: True estimate\nBlue: Bad estimate")
lines(density(diffs), col="blue")
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star), xlim=c(-0.06, 0.3), col="magenta", sub="\.nMagenta: True estimate\nBlue: Bad estimate")
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star), xlim=c(-0.06, 0.3), col="magenta", sub=".\nMagenta: True estimate\nBlue: Bad estimate")
lines(density(diffs), col="blue")
n <- 200
estimate_p <- function(X) {
return(length(X)/(length(X)+sum(X)))
}
p <- 0.3
diffs <- c()
diffs_star <- c()
for (i in 1:1000) {
X <- rgeom(n, p)
p_est <- 1/mean(X)
p_est_star <- estimate_p(X)
diff <- p_est - p
diff_star <- p_est_star - p
diffs <- c(diffs, diff)
diffs_star <- c(diffs_star, diff_star)
}
plot(density(diffs_star), xlim=c(-0.06, 0.3), col="magenta", sub="Magenta: True estimate. Blue: Bad estimate")
lines(density(diffs), col="blue")
Cars95
library(MASS)
Cars93
library(MASS)
plot(Cars93$Horsepower, Cars93$MPG.highway)
library(MASS)
fir <- lm(Cars93$MPG.highway ~ Cars93$Horsepower)
plot(Cars93$Horsepower, Cars93$MPG.highway)
library(MASS)
fit <- lm(Cars93$MPG.highway ~ Cars93$Horsepower)
plot(Cars93$Horsepower, Cars93$MPG.highway)
abline(fit)
abline(fit, col=red)
library(MASS)
fit <- lm(Cars93$MPG.highway ~ Cars93$Horsepower)
plot(Cars93$Horsepower, Cars93$MPG.highway)
abline(fit, col="red")
fit(200)
coeffs <- coefficients(fit)
estimate_mpg <- function(x) {
return(coeffs[1] + coeffs[2]*x)
}
hp <- 255
cat("The estimated mileage for a car with ", hp, " horsepower is ", estimate_mpg(255))
coeffs <- coefficients(fit)
estimate_mpg <- function(x) {
return(coeffs[1] + coeffs[2]*x)
}
hp <- 255
cat("The estimated mileage for a car with ", hp, " horsepower is ", estimate_mpg(hp))
coeffs <- coefficients(fit)
estimate_mpg <- function(x) {
return(coeffs[1] + coeffs[2]*x)
}
hp <- 255
cat("The estimated mileage for a car with", hp, "horsepower is", estimate_mpg(hp))
?lm
resid(fit)
res <- resid(fit)
plot(res)
setwd("C:/Users/thore/Documents/Repositories/ITU/APSTA/10")
