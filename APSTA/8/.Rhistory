cars93
Cars93
cars = Cars93
Cars93
cars <- Cars93
library(Cars93)
cars <- Cars93
library(MASS)
library(MASS)
cars <- Cars93
cars[cars$Cylinders == 8,]$names
library(MASS)
cars <- Cars93
cars[cars$Cylinders == 8,]
cars[cars$Cylinders == 8,]$AirBags
library(MASS)
cars <- Cars93
cars[cars$Cylinders == 8,]$AirBags
library(MASS)
cars <- Cars93
cars[cars$Cylinders == 8,]
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
sprintf("%s %s has 8 cylinders", car$Manufacturer, car$Model)
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
#sprintf("%s %s has 8 cylinders", car$Manufacturer, car$Model)
print(car)
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
#sprintf("%s %s has 8 cylinders", car$Manufacturer, car$Model)
print(car$Manufacturer)
}
#sprintf("%s %s has 8 cylinders", car$Manufacturer, car$Model)
print(car)
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
#sprintf("%s %s has 8 cylinders", car$Manufacturer, car$Model)
print(car[1])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
sprintf("%s %s has 8 cylinders", car[1], car[2])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
sprintf("%s %s has 8 cylinders", car[1], car[2])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
sprintf("%s %s has 8 cylinders", car[1], car[2])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
sprintf("%s %s has 8 cylinders", car[1], car[2])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
sprintf("%s %s has 8 cylinders", car[1], car[2])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
sprintf("%s %s has 8 cylinders", car[1], car[2])
}
sprintf("%s %s has 8 cylinders", car[1], car[2])
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
sprintf("%s %s has 8 cylinders", car[1], car[2])
}
sprintf("%s %s has 8 cylinders", car[1], car[2])
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
print(car[1], car[2])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
print(car[1])
print(car[2])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
print(car[1])
}
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
library(MASS)
cars <- Cars93
eightcars = cars[cars$Cylinders == 8,]
for (car in eightcars) {
print(car[1])
}
library(MASS)
cars <- Cars93
cars[cars$Cylinders == 8,]
library(MASS)
cars <- Cars93
eight = cars[cars$Cylinders == 8,]
print(eight)
library(MASS)
cars <- Cars93
eight = cars[cars$Cylinders == 8,]
print(eight[1])
library(MASS)
cars <- Cars93
eight = cars[cars$Cylinders == 8,]
print(eight[1:2])
mean(eight$Horsepower)
SD(eight$Horsepower)
sd(eight$Horsepower)
library(MASS)
cars <- Cars93
eight = cars[cars$Cylinders == 8,]
print(eight[1:2])
mean(eight$Horsepower)
sd(eight$Horsepower)
six = cars[cars$Cylinders == 6,]
print(six[1:2])
mean(six$Horsepower)
sd(six$Horsepower)
rain <- Precip
rain <- precip
rain
typeof(rain)
rain
mean(rain)
rain[rain > 50]
main(rain)
min(rain)
rain[min(rain)]
sort(rain)[1:5]
rivers
rivers
mean(rivers)
mean(rivers)
mean(rivers)
mean(rivers, trim=0.25)
rivers
sd(rivers)
function gen_res() {
function gen_res {
gen_res <- function() {
return(sqqrt(runif()))
}
replicate(100, gen_res())
gen_res <- function() {
return(sqrt(runif()))
}
replicate(100, gen_res())
?runif
ruinf(100)
runif(100)
sqrt(runif(100))
plot(sqrt(runif(100)))
bar(sqrt(runif(100)))
barplot(sqrt(runif(100)))
setwd("C:/Users/thore/Documents/Repositories/ITU/APSTA/6")
setwd("C:/Users/thore/Documents/Repositories/ITU/APSTA/8")
μ
μ <- "test"
μ
plot(firstchi)
firstchi
library(UsingR)
plot(firstchi)
plot(x=diamond$price, y=diamond$size)
